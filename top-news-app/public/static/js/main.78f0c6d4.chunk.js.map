{"version":3,"sources":["themes/media.js","themes/GlobalStyle.js","components/NewsCard.js","components/ShowSearch.js","components/Search.js","components/News.js","App.js","serviceWorker.js","index.js"],"names":["sizeInts","mediaSize","xs","sm","md","lg","xl","device","maxSm","maxMd","maxLg","maxXL","GlobalStyle","createGlobalStyle","Wrapper","styled","div","Source","Headline","Description","NewsImage","src","NewsCard","props","value","source","title","description","url","image","href","target","rel","className","showSearch","display","clicked","onClick","icon","faTimes","faSearch","size","Radio","Input","Form","form","Submit","RadioWrapper","label","Search","submit","searchChanged","searchOption","searchOptionChanged","id","type","onChange","e","name","checked","TOP_HEADLINES","gql","ALL_ARTICLES","News","state","search","keyword","searchInput","radio","toggleSearchHandler","setState","prevState","searchInputChangeHandler","updatedInput","searchSubmitHandler","event","preventDefault","searchOptionChangedHandler","this","category","noResultsText","headlines","query","variables","loading","error","data","console","totalResults","articles","slice","map","article","urlToImage","key","ShowSearch","Component","App","Boolean","window","location","hostname","match","client","ApolloClient","uri","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.78f0c6d4.chunk.js","sourcesContent":["export const sizeInts = {\n  xs: 450,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nexport const mediaSize = {\n  xs: `${sizeInts.xs}px`,\n  sm: `${sizeInts.sm}px`,\n  md: `${sizeInts.md}px`,\n  lg: `${sizeInts.lg}px`,\n  xl: `${sizeInts.xl}px`,\n};\n\nexport const device = {\n  sm: `(min-width: ${mediaSize.sm})`,\n  md: `(min-width: ${mediaSize.md})`,\n  lg: `(min-width: ${mediaSize.lg})`,\n  xl: `(min-width: ${mediaSize.xl})`,\n  maxSm: `(max-width: ${sizeInts.sm - 1}px)`,\n  maxMd: `(max-width: ${sizeInts.md - 1}px)`,\n  maxLg: `(max-width: ${sizeInts.lg - 1}px)`,\n  maxXL: `(max-width: ${sizeInts.xl - 1}px)`,\n};\n","import { createGlobalStyle } from 'styled-components';\nimport { device } from './media';\n\nconst GlobalStyle = createGlobalStyle`\n  * { \n    margin: 0;\n    padding: 0;\n  }\n\n  *,\n  *::after,\n  *::before {\n    box-sizing: inherit;\n    -moz-box-sizing: inherit; \n    -webkit-box-sizing: inherit;\n  }\n\n  html {\n    box-sizing: border-box;\n    font-size: 50%;\n\n    @media ${device.md} {\n      font-size: 62.5%; \n    }\n\n    @media ${device.xl} {\n      font-size: 75%; \n    }\n  }\n\n  body {\n    background-image: linear-gradient(165deg, grey, white);\n    background-size: cover;\n    background-repeat: no-repeat;\n    min-height: 100vh;\n    font-size: 1.8rem;\n\n    address, h1, h2, h3, h4, h5, h6 {\n    }\n    \n    * {\n      display: flex;\n      flex-flow: column;\n      align-items: center;\n      text-align: center;\n    }\n    \n    h1 {\n    }\n\n    h2 {\n    }\n\n    @media ${device.md} {\n      font-size: 1.4rem;\n    }\n  }\n`;\n\nexport default GlobalStyle;","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from 'themes/media';\n\nconst Wrapper = styled.div`\n  width: 30rem;\n  padding: 2rem 3rem;\n  border: 1px solid black;\n  background-color: white;\n  box-shadow: 2px 2px 4px 0 black;\n  position: relative;\n\n  &:not(:first-child) {\n    margin-top: 5rem;\n  }\n\n  > :not(.source):not(:first-child) {\n    margin-top: 2rem;\n  }\n\n  @media ${device.sm} {\n    width: 50rem;\n  }\n\n  @media ${device.md} {\n  }\n\n  @media ${device.lg} {\n    width: 80rem;\n  }\n\n  @media ${device.xl} {}\n`;\n\nconst Source = styled.div`\n  padding: .2rem .5rem;\n  background-color: red;\n  color: white;\n  border: 2px outset white;\n  border-radius: 4px;\n  position: absolute;\n  top: .5rem;\n  left: .5rem;\n`;\n\nconst Headline = styled.div`\n  a {\n    font-size: 1.8rem;\n  }\n`;\n\nconst Description = styled.div`\n  font-size: 1.4rem;\n  font-family: sans-serif;\n\n  a {\n    display: inline-block;\n  }\n`;\n\nconst NewsImage = styled.div`\n  width: 24rem;\n  height: calc(5 / 7 * 20rem);\n  background-image: ${({ src }) => `url(${src})`};\n  background-size: cover;\n  border: 1px solid black;\n`;\n\nconst NewsCard = (props) => {\n  const { source, title, description, url, image } = props;\n  const href = (value) => (\n    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{value}</a>\n  )\n    \n  return (\n    <Wrapper>\n      <NewsImage src={image} />\n      <Headline>{href(title)}</Headline>\n      <Description>{description}</Description>\n      <Source className=\"source\">{source}</Source>\n    </Wrapper>\n  );\n};\n\nNewsCard.propTypes = {\n};\n\nexport default NewsCard\n","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from 'themes/media';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nconst Wrapper = styled.div`\n  width: 4rem;\n  height: 4rem;\n  position: fixed;\n  top: 3rem;\n  right: 3rem;\n  border-radius: 50%;\n  background-color: white;\n  box-shadow: 0 0 4px 0 black;\n  cursor: pointer;\n  transition: .2s all ease-out;\n  justify-content: center;\n  z-index: 9999;\n\n  :hover {\n    transform: scale(1.1) translateY(-.2rem);\n  }\n\n  :active {\n    transform: translateY(0);\n  }\n\n\n  @media ${device.sm} {}\n\n  @media ${device.md} {}\n\n  @media ${device.lg} {}\n\n  @media ${device.xl} {}\n`;\n\nconst showSearch = (props) => {\n  const { display, clicked } = props;\n\n  return (\n    <Wrapper onClick={clicked}>\n      <FontAwesomeIcon icon={display ? faTimes : faSearch} size=\"1x\" />\n    </Wrapper>\n  );\n};\n\nshowSearch.propTypes = {\n};\n\nexport default showSearch\n","import React from 'react';\nimport styled from 'styled-components';\nimport { device } from 'themes/media';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: rgba(4, 30, 21, .8);\n  justify-content: center;\n  position: fixed;\n  top: 0;\n  flex-direction: column-reverse;\n\n  * {\n    color: white;\n  }\n\n  @media ${device.sm} {\n    height: 11rem;\n    flex-direction: column;\n  }\n\n  @media ${device.md} {}\n\n  @media ${device.lg} {}\n\n  @media ${device.xl} {}\n`;\n\nconst Radio = styled.div`\n\n  @media ${device.sm} {\n    flex-direction: row;\n    justify-content: space-evenly;\n  }\n`;\n\nconst Input = styled.div`\n  input {\n    width: 30rem;\n    height: 3rem;\n    font-size: 1.8rem;\n    color: black;\n    padding: 0 1rem;\n  }\n\n  @media ${device.sm} {\n    flex-direction: row;\n    justify-content: space-evenly;\n\n    input {\n      text-align: left;\n    }\n  }\n`;\n\nconst Form = styled.form`\n  width: 30rem;\n\n  > div {\n    width: 100%;\n    margin: .5rem 0;\n  }\n\n  @media ${device.sm} {\n    width: 50rem;\n  }\n\n  @media ${device.md} {}\n\n  @media ${device.lg} {\n  }\n`;\n\nconst Submit = styled.div`\n  width: 10rem;\n  background-color: lightgreen;\n  padding: .5rem 1rem;\n  border: 2px solid white;\n  border-radius: 2px;\n`;\n\nconst RadioWrapper = styled.label`\n  flex-direction: row;\n\n  > :first-child {\n    margin-right: 1rem;\n  }\n`;\n\nconst Search = (props) => {\n  const { submit, value, searchChanged, searchOption, searchOptionChanged } = props;\n\n  return (\n    <Wrapper>\n      <Form id=\"search-form\">\n        <Input>\n          <input type=\"text\" value={value} onChange={(e) => searchChanged(e)} />\n          <Submit \n            onClick={(e) => submit(e)}\n          >\n            Go\n          </Submit>\n        </Input>\n        <Radio>\n          <RadioWrapper>\n              <input\n                type=\"radio\"\n                name=\"searchType\"\n                value=\"top\"\n                checked={searchOption === 'top'}\n                onChange={searchOptionChanged}\n              />\n              <p>Search Top Stories</p>\n          </RadioWrapper>\n          <RadioWrapper>\n              <input\n                type=\"radio\"\n                name=\"searchType\"\n                value=\"everything\"\n                checked={searchOption === 'everything'}\n                onChange={searchOptionChanged}\n              />\n              <p>Search Everything</p>\n          </RadioWrapper>\n        </Radio>\n      </Form>\n    </Wrapper>\n  );\n};\n\nSearch.propTypes = {\n};\n\nexport default Search\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { device } from 'themes/media';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport NewsCard from './NewsCard';\nimport ShowSearch from './ShowSearch';\nimport Search from './Search';\n\nconst TOP_HEADLINES = gql`\n  query TopQuery($keyword: String) {\n    topHeadlines(keyword: $keyword) {\n      status\n      totalResults\n      articles{\n        source {\n          name\n        }\n        title\n        description\n        url\n        urlToImage\n      }\n    }\n  }\n`;\n\nconst ALL_ARTICLES = gql`\n  query AllQuery($keyword: String) {\n    everything(keyword: $keyword) {\n      status\n      totalResults\n      articles{\n        source {\n          name\n        }\n        title\n        description\n        url\n        urlToImage\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  margin: 5rem 0;\n\n  @media ${device.sm} {}\n\n  @media ${device.md} {}\n\n  @media ${device.lg} {}\n\n  @media ${device.xl} {}\n`;\n\nclass News extends Component {\n  state = {\n    search: false,\n    keyword: '',\n    searchInput: {\n      value: '',\n      radio: 'top',\n    },\n    searchOption: 'top',\n  }\n\n  toggleSearchHandler = () => {\n    this.setState((prevState) => ({ search: !prevState.search }))\n  }\n\n  searchInputChangeHandler = (e) => {\n    const updatedInput = { ...this.state.searchInput }\n    updatedInput.value = e.target.value;\n\n    this.setState({ searchInput: updatedInput })\n  }\n\n  searchSubmitHandler = (event) => {\n    event.preventDefault();\n    const { value, radio } = this.state.searchInput\n\n    this.setState({ \n      search: false,\n      keyword: value,\n      searchOption: radio,\n    })\n  }\n\n  searchOptionChangedHandler = (e) => {\n    const updatedInput = { ...this.state.searchInput }\n    updatedInput.radio = e.target.value;\n\n    this.setState({ searchInput: updatedInput })\n  }\n\n  render() {\n    const { search, keyword, searchInput: { value, radio }, searchOption } = this.state;\n    const category = searchOption === 'top' ? 'topHeadlines' : 'everything';\n    const noResultsText = searchOption === 'top' ? 'top headlines' : 'any current articles';\n    \n    const headlines = (\n      <Query query={searchOption === 'top' ? TOP_HEADLINES : ALL_ARTICLES} variables={{ keyword }}>\n        {\n          ({ loading, error, data }) => {\n            if (loading) return <h1>...loading</h1>\n            if (error) { console.error(error); return <h1>There was an error receiving data</h1> }\n            if (!data[category]) return <h1>No Data</h1>\n            const { totalResults, articles } = data[category];\n            if (totalResults === 0) {\n              return (\n              <h1>{`No results found for \"${keyword}\" in ${noResultsText}`}</h1>\n              )\n            }\n            return articles.slice(0, 10).map((article) => {\n              const { source: { name: source } = {}, title, description, url, urlToImage: image} = article\n              return (\n                <NewsCard\n                  key={url}\n                  source={source}\n                  title={title}\n                  description={description}\n                  url={url}\n                  image={image}\n                />\n            )})\n          }\n        }\n      </Query>\n    )\n\n    return (\n      <Wrapper>\n        {headlines}\n        <ShowSearch\n          display={search}\n          clicked={this.toggleSearchHandler}\n          />\n        {search \n          ? <Search\n              submit={this.searchSubmitHandler}\n              value={value}\n              searchChanged={this.searchInputChangeHandler}\n              searchOption={radio}\n              searchOptionChanged={this.searchOptionChangedHandler}\n            /> \n          : null}\n      </Wrapper>\n    );\n  } \n}\n\nNews.propTypes = {\n};\n\nexport default News\n","import React from 'react';\nimport GlobalStyle from 'themes/GlobalStyle';\nimport News from 'components/News';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <News />\n      <a href=\"https://kyledevlinmurray.com\">Back to Kyle's Homepage</a>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n})\n\nconst app = (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n)\n\nReactDOM.render(\n  app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}